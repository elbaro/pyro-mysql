name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: yes
          MYSQL_USER: test
          MYSQL_PASSWORD: 1234
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13", "3.14.0-rc.2"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Python virtual environment
        uses: actions/cache@v3
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-venv-${{ matrix.python-version }}-

      - name: Create virtual environment
        run: |
          python -m venv venv
          echo "$PWD/venv/bin" >> $GITHUB_PATH

      - name: Install maturin
        run: |
          source venv/bin/activate
          pip install --upgrade pip
          pip install maturin

      - name: Build and install package
        run: |
          source venv/bin/activate
          maturin develop

      - name: Install test dependencies
        run: |
          source venv/bin/activate
          pip install pytest pytest-asyncio

      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h 127.0.0.1 -u test -p1234 --silent; do
            echo 'waiting for mysql...'
            sleep 1
          done

      - name: Run tests
        env:
          TEST_DATABASE_URL: mysql://test:1234@127.0.0.1:3306/test
        run: |
          source venv/bin/activate
          pytest -v
